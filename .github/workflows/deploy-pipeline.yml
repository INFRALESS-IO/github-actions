name: devops-deploy
on:
  workflow_call:
    inputs:
      app-name:
        required: true
        type: string
      argocd-extra-params:
        required: true
        type: string
      teleport-url:
        required: true
        type: string
      environment:
        required: true
        type: string
      release-tag:
        required: true
        type: string
      argocd-username:
        required: true
        type: string
      argocd-password:
        required: true
        type: string
      teleport-key:
        required: true
        type: string
        
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: CLONE K8S HELM CHART
      id: clone-k8s-helm-chart
      uses: INFRALESS-IO/github-actions/.github/actions/clone-private-repo@feature/devops-from-master
      with:
        github-deploy-key: "${{steps.ssm-secret-fetch-github-deploy-key.outputs.ssm-secret}}"
        repository: "${{ inputs.clone-k8s-helm-chart-repository }}"
        repository-tag: "${{ inputs.clone-k8s-helm-chart-repository-tag }}"
        clone-path: "./devops/argocd/k8s-helm-chart"
        extra-commands: "rm -r ./devops/argocd/k8s-helm-chart/.git"

    - name: Write Release
      run: |
        echo ${{steps.select-environment.outputs.release-tag}} >> release.txt

    - name: UPDATE ARGOCD APPS DEFINITION WITH THE NEW RELEASE TAG
      id: update-argocd-apps-release-tag
      uses: INFRALESS-IO/github-actions/.github/actions/sed-files@feature/devops-from-master
      with:
        file-path: "./devops/argocd/${{steps.select-environment.outputs.environment}}/*.yaml"
        find-pattern: "${{ inputs.find-pattern }}"
        replace-pattern: "${{steps.select-environment.outputs.release-tag}}"

    - name: COMMIT CHANGE AND PRODUCE RELEASE TAG
      id: commit-and-tag
      uses: INFRALESS-IO/github-actions/.github/actions/commit-and-tag@feature/devops-from-master
      with:
        release-tag: "${{ steps.select-environment.outputs.release-tag }}"
        commit-path: "${{ inputs.commit-path }}"

    - name: Install ARGOCD CLI
      id: install-argocd-cli
      uses: INFRALESS-IO/github-actions/.github/actions/install-argocd-cli@feature/devops-from-master

    - name: Install TELEPORT CLI
      id: install-teleport-cli
      uses: INFRALESS-IO/github-actions/.github/actions/install-teleport-cli@feature/devops-from-master
        
    - name: CHECK IF APP FILES EXIST
      run: |
        set -x
        pwd
        ls -la
        ls -la ./devops/argocd/dev/
        cat ./devops/argocd/dev/c-bcm-test.yaml
        cat ./devops/argocd/dev/c-bcm-test-devops.yaml

    - name: Update ARGOCD Release
      id: update-argocd-release
      uses: INFRALESS-IO/github-actions/.github/actions/update-argocd-release@feature/devops-from-master
      with:
        environment: "${{ inputs.environment }}"
        release-tag: "${{ inputs.release-tag }}"
        app-name: "${{ inputs.app-name }}"
        argocd-username: "${{ inputs.argocd-username }}"
        argocd-password: "${{ inputs.argocd-password }}"
        argocd-timeout-seconds: "360"
        argocd-extra-params: "${{ inputs.argocd-extra-params }}"
        teleport-key: ${{ inputs.teleport-key }}
        teleport-url: "${{ inputs.teleport-url }}"
        teleport-bastion: bastion-${{ inputs.environment }}

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{steps.select-environment.outputs.release-tag}}
        release_name: Release ${{steps.select-environment.outputs.release-tag}}
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false
        generate_release_notes: true