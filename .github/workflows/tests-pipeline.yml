name: devops-tests
on:
  workflow_call
permissions: write-all
jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      APP_ENV: testing
      BROADCAST_DRIVER: log
      BCRYPT_ROUNDS: 4
      CACHE_DRIVER: array
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: array
      MAIL_MAILER: array
      DB_CONNECTION: pgsql
      DB_HOST: localhost
      DB_PORT: '5432'
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: postgres
      DB_GAT_HOST: localhost
      DB_GAT_PORT: '5432'
      DB_GAT_DATABASE: gat_dev_v3
      DB_GAT_USERNAME: postgres
      DB_GAT_PASSWORD: postgres
      TEST_SMS_NUMBER: '3300000000'
      TEST_EMAIL: anish@continusys.com
      TWILIO_SID: fake
      TWILIO_NUMBER: '+123456789'
      TWILIO_TOKEN: fake
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, dom, fileinfo, gd, bcmath, soap, zip, pgsql, pcov
          coverage: pcov

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache/files
          key: dependencies-composer-${{ hashFiles('composer.json') }}

      - name: Install Composer dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare the application
        run: cp .env.example .env && php artisan key:generate

      - name: Clear Config
        run: php artisan config:clear && php artisan route:clear

      - name: Create GAT DB
        run: psql -h localhost -d postgres -U postgres -c 'CREATE DATABASE "gat_dev_v3";'
        env:
          PGPASSWORD: postgres

      - name: Import GAT tables
        run: psql -h localhost -d gat_dev_v3 -U postgres -f database/schema/gat.sql
        env:
          PGPASSWORD: postgres

      - name: Run Tests
        run: ./vendor/bin/pest
